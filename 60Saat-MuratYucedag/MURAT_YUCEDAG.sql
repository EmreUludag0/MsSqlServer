CREATE DATABASE KITAPLIK
USE KITAPLIK
CREATE TABLE KITAP(
KITAP_NO INT,
KITAP_AD VARCHAR(50),
KITAP_YAZAR VARCHAR(50),
KITAP_SAYFA SMALLINT,
KITAP_FIYAT INT,
KITAP_TARIH DATE,
KITAP_YAYIN_EVI VARCHAR(50)
)

SELECT * FROM KITAP 
WHERE KITAP_SAYFA<300

SELECT * FROM KITAP
WHERE KITAP_AD = 'NUTUK' --ÝSMÝ NUTUK OLANI GETÝRÝR 

SELECT * FROM KITAP
WHERE KITAP_YAYIN_EVI= 'GUNES' AND KITAP_FIYAT<50 

SELECT * FROM KITAP
WHERE KITAP_YAYIN_EVI = 'YILDIZ' 

SELECT * FROM KITAP
WHERE KITAP_YAYIN_EVI = 'YILDIZ'  AND KITAP_FIYAT<50

SELECT * FROM KITAP
WHERE KITAP_SAYFA>=200 OR KITAP_FIYAT>10

SELECT * FROM KITAP
WHERE KITAP_SAYFA IN(200,300,220) --KOLONUN ÝÇÝNDEKÝ DEGERLERÝN KARÞILIÐI OLANLARI GETÝRÝR

SELECT * FROM KITAP
WHERE KITAP_AD LIKE '%A%' --KÝTAP ÝSMÝNÝDE 'A' HARFÝ OLANLARI GETÝRÝR

SELECT * FROM KITAP
WHERE KITAP_AD LIKE '%A%' AND KITAP_SAYFA IN(300,75,210)

SELECT * FROM KITAP
WHERE KITAP_AD LIKE '%A%' AND KITAP_SAYFA IN(300,75,210) AND KITAP_FIYAT<15

SELECT * FROM KITAP
WHERE KITAP_AD LIKE 'N%' --SADECE 'N' ÝLE BAÞLAYAN KÝTAPLARI LÝSTELER

INSERT INTO KITAP VALUES(13,'INSAN NE ILE YASAR', 'TOLSTOY',110,40,'07-07-2016','GUNES')

INSERT INTO KITAP(KITAP_NO,KITAP_AD,KITAP_SAYFA,KITAP_TARIH,KITAP_YAYIN_EVI)
VALUES(14,'SUC VE CEZA',1250,'08-08-2016','MAVIBULUT')


--INSERT = HÝÇ OLMAYAN SATIRA GÜNCELLEME YAPAR
--UPDATE = VAROLAN SATIR ÜZERÝNDE YENÝLÝK YAPAR

SELECT * FROM KITAP

UPDATE KITAP SET KITAP_YAZAR = 'DOSTOYEVSKI', KITAP_FIYAT= 50
WHERE KITAP_AD = 'SUC VE CEZA'

-- UPDATE'ÝN MANTIÐI ÞUDUR, DÜZENLENMESÝNÝ ÝSTENÝLEN TABLO ÝSMÝ ONDAN SONRA 'SET' YAZIP
--DEÐÝÞTÝRÝLMEK ÝSTENEN YERLER YAZILIR, YAZILDIKSIN SONRA ÝSE 'WHERE' KOMUTU ÝLE 
-- KÝTAP TABLOSUNDA HANGÝ KÝTABIN ÖZELLÝKLERÝ DEÐÝÞTÝRÝLECEÐÝ BELÝRTÝRLÝR YA DA
-- ORAYA GÝRÝLEN KISITLAMA ÝLE SATIRIN ÖZELLÝKLERÝ DEÐÝÞTÝRÝLÝR

UPDATE KITAP SET KITAP_FIYAT = 10 WHERE KITAP_FIYAT<=5

DELETE FROM KITAP WHERE KITAP_NO=8 --KOÞULLU SÝLME ÝÞLEMÝ

SELECT * FROM KITAP

DELETE FROM KITAP WHERE KITAP_SAYFA >900 OR KITAP_FIYAT = 12

INSERT INTO KITAP VALUES(
14,
'BEYAZ GECELER',
'DOSTOYEVSKÝ',
80,
5,
'08-08-2016',
'MAVIBULUT'
)

SELECT DISTINCT KITAP_YAZAR FROM KITAP --DISTINCT KOMUTU ÝLE TABLODA ÝKÝ TANE OLAN VERÝNÝN SADECE BÝR TANESÝNÝ GETÝRÝR


SELECT * FROM KITAP
INSERT INTO KITAP VALUES( -- TABLOYA VERÝ EKLEMEK ÝÇÝN BU KOMUT KULLANILIR
19,
'KURK MANTOLU MADONNA',
'SABAHATTÝN ALÝ',
160,
3,
'02-02-2017',
'JUPITER'
)

SELECT * FROM KITAP ORDER BY KITAP_YAYIN_EVI, KITAP_FIYAT DESC --YUKARIDAN VEYA AÞAÐIDAN SIRALAMAK ÝÇÝN KULLANILIR



SELECT KITAP_FIYAT AS 'KITAP UCRETÝ' FROM KITAP --TABLODAKÝ FÝYAT LÝSTESÝNÝ GETÝRÝR VE BAÞLIÐI TIRNAK ÝÇÝNDE YAZILAN ÝLE DEÐÝÞTÝRÝR


SELECT KITAP_FIYAT AS 'KITAP ÜCRETÝ', KITAP_AD AS 'KITAP ÝSÝM' FROM KITAP

SELECT KITAP_AD, KITAP_YAZAR, KITAP_FIYAT, KITAP_FIYAT+2 AS 'YENÝ FÝYAT' FROM KITAP

USE KITAPLIK
SELECT * FROM KITAP WHERE KITAP_FIYAT>15 OR KITAP_YAYIN_EVI = 'MERKUR' ORDER BY KITAP_AD DESC

SELECT * FROM KITAP WHERE KITAP_YAYIN_EVI IN('MERKUR','AY')

SELECT * FROM KITAP WHERE KITAP_FIYAT BETWEEN 10 AND 20 --10 ÝLE 20 ARASINDA FIYATA SAHÝP OLANLARIN LÝSTELERÝNÝ GETÝRÝR





-- TEMEL GENEL TEKRAR !!

CREATE DATABASE OKULUM
USE OKULUM

CREATE TABLE OGRENCI1(

OGR_NO	   INT NOT NULL PRIMARY KEY,
OGR_ADI	   VARCHAR(50),
OGR_SOYAD  VARCHAR(50),
OGR_SINIF  VARCHAR(2),
OGR_ILCE   VARCHAR(50) DEFAULT 'IZMIT',
OGR_SINAV1 TINYINT CHECK (OGR_SINAV1 > 0),
OGR_SINAV2 INT,
CONSTRAINT CHKS2 CHECK(OGR_SINAV2 >=0 AND OGR_SINAV2 <=100),
OGR_KOL VARCHAR(20),
CONSTRAINT CHKKOL CHECK(OGR_KOL IN ('SAGLIK','KUTUPHANE','CEVRE','TRAFIK'))
)


ALTER TABLE OGRENCI1 ADD 
DEVAMSIZLIK TINYINT,
OGR_KAYIT_TARIHI SMALLDATETIME, 
OGR_BORC TINYINT,
OGR_ADRES VARCHAR(50)



ALTER TABLE OGRENCI ADD CHECK (DEVAMSIZLIK <= 20)

ALTER TABLE OGRENCI1 DROP COLUMN OGR_BORC

TRUNCATE TABLE OGRENCI1

DROP TABLE OGRENCI1






--DML GENEL TEKRAR !!

USE KITAPLIK
SELECT * FROM KITAP --DENEME

SELECT KITAP_NO,KITAP_AD, KITAP_FIYAT FROM KITAP
WHERE KITAP_AD LIKE '%Z%' OR KITAP_FIYAT=20

SELECT KITAP_NO,KITAP_AD, KITAP_FIYAT FROM KITAP
WHERE KITAP_AD LIKE 'N____' --N ÝLE BAÞLAYIP TOPLAM 5 HARFLÝ OLAN KÝTAPLARI GETÝRÝR
 
SELECT KITAP_NO,KITAP_AD, KITAP_YAYIN_EVI FROM KITAP
WHERE KITAP_YAYIN_EVI IN('AY', 'GUNES', 'MARS')

INSERT INTO KITAP VALUES(
19,
'HULLECI',
'RESAT NURI GUNTEKIN',
75,
8,
'03-03-2017',
'JUPITER'
)

SELECT * FROM KITAP 

INSERT INTO  KITAP(KITAP_NO,KITAP_AD,KITAP_FIYAT) VALUES(
21,
'SERENAD',
20
)

UPDATE KITAP SET KITAP_YAZAR = 'ZULFU LÝVANELI', KITAP_SAYFA = 450
WHERE KITAP_NO = 21

UPDATE KITAP SET KITAP_TARIH = '04-04-2017', KITAP_YAYIN_EVI = 'YILDIZ'
WHERE KITAP_NO = 21

SELECT * FROM KITAP WHERE KITAP_NO = 21

-- TEKRARLAR BÝTTÝ




SELECT * FROM KITAP
WHERE KITAP_AD LIKE 'N%K' --N ÝLE BAÞLAYIP K ÝLE BÝTEN KAYITLARI GETÝRÝR

SELECT * FROM KITAP
WHERE KITAP_AD LIKE '[A-E]%'  

--ARÝTMETÝK FONKSÝYONLAR







SELECT 20+04 AS 'TOPLAM', 20-4 AS 'FARK'

SELECT KITAP_AD, KITAP_FIYAT, KITAP_FIYAT+3 AS 'YENI FIYAT' 
FROM KITAP

SELECT KITAP_AD + ' - ' + KITAP_YAZAR AS 'KITAPLIK' FROM KITAP

SELECT SUBSTRING(KITAP_AD,1,5) FROM KITAP
SELECT LEFT(KITAP_AD,6) FROM KITAP

SELECT UPPER(KITAP_AD) AS 'BUYUK HARF' FROM KITAP
SELECT LOWER(KITAP_AD) AS 'BUYUK HARF' FROM KITAP

SELECT KITAP_AD, LEN(KITAP_AD) AS 'KARAKTER SAYISI' FROM KITAP
WHERE LEN(KITAP_AD)<10


SELECT KITAP_AD,REPLACE(KITAP_YAZAR, 'ZULFU LIVANELI', 'Z.LIVANELI') FROM KITAP


SELECT ABS(KITAP_FIYAT) AS 'KITAP FIYATLARI' FROM KITAP 

SELECT CEILING(KITAP_FIYAT) AS 'KITAPFIYATLARI', KITAP_FIYAT,KITAP_AD FROM KITAP

SELECT KITAP_AD, KITAP_FIYAT,ROUND(KITAP_FIYAT,1) FROM KITAP

SELECT POWER(2,5) AS 'US'
SELECT SQRT(62) AS 'KARE ALMA'

SELECT SUM(KITAP_FIYAT) AS 'TOPLAM' FROM KITAP 
WHERE KITAP_FIYAT > 15 

SELECT KITAP_AD,KITAP_FIYAT FROM KITAP 
WHERE KITAP_FIYAT >= 12

SELECT AVG(KITAP_FIYAT) AS 'ORTALAMA' FROM KITAP

SELECT MAX(KITAP_FIYAT), MIN(KITAP_FIYAT) FROM KITAP

SELECT COUNT(KITAP_AD) FROM KITAP

 
 






 
 --TARIH FONKSIYONLARI

 USE KITAPLIK
 SELECT * FROM KITAP

 SELECT GETDATE() --ANLIK SAAT VE TARIHI GETIRIR

 SELECT DATEPART(YEAR, GETDATE()) AS 'YIL',
 DATEPART(MONTH,GETDATE()) AS 'AY',
 DATEPART(DAY,GETDATE()) AS 'GUN',
 DATEPART(WEEK,GETDATE()) AS 'HAFTA'

 SELECT * FROM KITAP WHERE DATEPART(MONTH,KITAP_TARIH)=06








 --DATEDIFF

 SELECT * FROM KITAP
 SELECT DATEDIFF(YEAR,'1923-10-29','2023-10-29')
 SELECT DATEDIFF(YEAR,'2016-01-05','2023-01-10') AS 'FARK'
 SELECT DATEDIFF(YEAR,'1919-05-09',GETDATE())
 SELECT DATEADD(DAY,10,GETDATE())

 







 --GROUP BY

 SELECT KITAP_YAZAR, COUNT(KITAP_AD) AS 'KITAPSAYISI' FROM KITAP 
 GROUP BY KITAP_YAZAR

 SELECT KITAP_AD, COUNT(KITAP_AD) AS 'STOK' FROM KITAP 
 GROUP BY KITAP_AD

 SELECT KITAP_YAYIN_EVI, COUNT(KITAP_AD) FROM KITAP 
 GROUP BY KITAP_YAYIN_EVI 

 SELECT KITAP_YAYIN_EVI, SUM(KITAP_FIYAT) AS'TOPLAM FIYAT' FROM KITAP
 GROUP BY KITAP_YAYIN_EVI

 SELECT KITAP_YAYIN_EVI, MAX(KITAP_FIYAT) AS 'EN PAHALI', MIN(KITAP_FIYAT) 
 'EN UCUZ' FROM KITAP WHERE KITAP_FIYAT >20 GROUP BY KITAP_YAYIN_EVI 

 SELECT KITAP_YAYIN_EVI, COUNT(KITAP_AD) AS 'ADET SAYISI' FROM KITAP WHERE KITAP_FIYAT > 10
 GROUP BY KITAP_YAYIN_EVI









 -- GROUP BY 2. DERS

 CREATE TABLE KISILER(
 KISI_NO TINYINT,
 AD VARCHAR(50),
 SOYAD VARCHAR(50),
 MESLEK VARCHAR(50),
 SEHIR VARCHAR(50),
 MAAS INT
 )
 
 SELECT MESLEK, COUNT(AD) AS 'PERSONEL SAYISI'  FROM KISILER
 GROUP BY MESLEK ORDER BY COUNT(AD)

 SELECT SEHIR, COUNT(AD) AS 'SAYI' FROM KISILER 
 GROUP BY SEHIR ORDER BY SEHIR

 SELECT MESLEK, COUNT(KISI_NO) AS 'PERSONEL SAYISI', 
 SUM(MAAS) AS 'TOPLAM MAAS' FROM KISILER GROUP BY MESLEK

 SELECT MESLEK, COUNT(KISI_NO) AS 'PERSONEL SAYISI',
 SUM(MAAS) AS 'TOPLAM MAAS',
 AVG(MAAS) AS 'MAAS ORTALAMASI' FROM KISILER GROUP BY MESLEK
 
 SELECT SEHIR, COUNT(SEHIR) AS 'SEHIR' 
 FROM KISILER GROUP BY SEHIR

 SELECT MESLEK, MAX(MAAS) AS 'EN FAZLA', MIN(MAAS) AS 'EN AZ'
 FROM KISILER GROUP BY MESLEK







 -- HAVING 
 USE KITAPLIK
 SELECT KITAP_YAYIN_EVI, COUNT(KITAP_AD) AS 'KITAP SAYISI', 
 SUM(KITAP_FIYAT) AS 'ALACAK',
 SUM(KITAP_VERGI) AS 'VERECEK',
 SUM((KITAP_FIYAT)-SUM(KITAP_VERGI)) AS 'NET BAKIYE'
 FROM KITAP GROUP BY KITAP_YAYIN_EVI HAVING ((SUM(KITAP_FIYAT)-SUM(KITAP_VERGI)))>15
 









 -- BIRLESTIRME ISLEMLERI

 CREATE TABLE KITAP2(
 KITAP_ADI VARCHAR(50),
 KITAP_TUR VARCHAR(50),
 KITAP_OZET VARCHAR(50),
 KITAP_RENK VARCHAR(50) 
 )

 CREATE TABLE KITAP3(
 KITAP_RENGI VARCHAR(50),
 KITAP_BASKI INT
 )


 SELECT KITAP_AD,KITAP_YAZAR FROM KITAP, KITAP2 
 WHERE KITAP.KITAP_AD =KITAP2.KITAP_ADI

 SELECT KITAP_ADI, KITAP_RENK FROM KITAP2 K1, KITAP K2 
 WHERE K1.KITAP_ADI= K2.KITAP_AD

 SELECT KITAP_ADI, KITAP_TUR, KITAP_RENGI 
 FROM KITAP K1 ,KITAP2 K2, KITAP3 K3
 WHERE K1.KITAP_AD = K2.KITAP_ADI 
 AND K2.KITAP_RENK=K3.KITAP_RENGI   










 --INNER JOIN

SELECT KITAP_AD, KITAP_RENK, KITAP_TUR FROM KITAP K1 INNER JOIN KITAP2 K2 
 ON K1.KITAP_AD = K2.KITAP_ADI


SELECT SUM(KITAP_FIYAT) AS 'TOPLA FIYAT', KITAP_TUR FROM KITAP K1 INNER JOIN KITAP2 K2
 ON
 K1.KITAP_AD = K2.KITAP_ADI 
 GROUP BY KITAP_TUR ORDER BY KITAP_TUR


SELECT KITAP_AD, KITAP_TUR, KITAP_RENK FROM KITAP K1 INNER JOIN KITAP2 K2
 ON 
 K1.KITAP_AD = K2.KITAP_ADI INNER JOIN KITAP3 K3 
 ON
 K2.KITAP_RENK = K3.KITAP_RENGI
  


SELECT KITAP_TUR, SUM(KITAP_FIYAT) AS 'TOPLAM' FROM KITAP K1 INNER JOIN KITAP2 K2
 ON 
 K1.KITAP_AD = K2.KITAP_ADI
 GROUP BY KITAP_TUR
 ORDER BY KITAP_TUR








 -- LEFT OUTER JOIN 
 SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 INNER JOIN KITAP2 K2 
 ON
 K1.KITAP_AD = K2.KITAP_ADI

 SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 LEFT OUTER JOIN KITAP2 K2
 ON
 K1.KITAP_AD = K2.KITAP_ADI


 SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 RIGHT OUTER JOIN KITAP2 K2
 ON 
 K1.KITAP_AD = K2. KITAP_ADI

 SELECT * FROM KITAP2

 SELECT COUNT(KITAP_AD) FROM KITAP
 WHERE KITAP_AD = 'BEYAZ GECELER'








 -- FULL OUTER JOIN 
 SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 FULL OUTER JOIN KITAP2 K2
 ON 
 K1.KITAP_AD = K2.KITAP_ADI

 SELECT * FROM KITAP2
 SELECT COUNT(KITAP_ADI) FROM KITAP2





 --INTERSECT (SADECE KESÝÞTÝÐÝ ALANLARI LÝSTELER)

 SELECT KITAP_AD FROM KITAP
 INTERSECT
 SELECT KITAP_ADI FROM KITAP2

 --EXCEPT

SELECT KITAP_AD FROM KITAP
 EXCEPT -- BÝRÝNCÝ TABLODA OLUP ÝKÝNCÝ TABLODA OLMAYAN VERÝLÝ LÝSTELER
SELECT KITAP_ADI FROM KITAP2

SELECT KITAP_ADI FROM KITAP2
 EXCEPT --ÝKÝNCÝ TABLODA OLUP BÝRÝNCÝ TABLODA OLMAYAN VERÝLERÝ LÝSTELER
SELECT KITAP_AD FROM KITAP



--UNION

SELECT KITAP_AD FROM KITAP
UNION 
SELECT KITAP_ADI FROM KITAP2

--UNION ALL

SELECT KITAP_AD FROM KITAP
UNION ALL
SELECT KITAP_ADI FROM KITAP2


-- ALT SORGULAR

SELECT * FROM KITAP
WHERE KITAP_VERGI = (SELECT KITAP_VERGI FROM KITAP WHERE KITAP_AD='PALTO')

USE KITAPLIK
ALTER TABLE KITAP2 ADD
KITAP_PUAN INT


-- TRANSACTÝON


SELECT * FROM KITAP
BEGIN TRANSACTION --ISLEM BASLAGINI
UPDATE KITAP SET KITAP_SAYFA = 50
UPDATE KITAP SET KITAP_FIYAT = 1
SELECT * FROM KITAP
ROLLBACK
SELECT * FROM KITAP
 
 -- SAVE TRANSACTION NEDIR OGREN VE BAK!

 






 -- DECLARE 
 DECLARE @SEHIR VARCHAR(30)
 DECLARE @ILCE VARCHAR(30)
 SET @SEHIR= 'KAHRAMANMARAS'
 SET @ILCE = 'ELBISTAN'
 PRINT @SEHIR +' '+@ILCE



 --DEÐÝÞKEN ÝLE DÖRT ISLEM

 DECLARE @SAYI_A INT, @SAYI_B INT, @TOPLAM INT
 SET @SAYI_A = 5
 SET @SAYI_B = 8
 SET @TOPLAM = @SAYI_A + @SAYI_B
 PRINT 'TOPLAM: ' + CAST(@TOPLAM AS VARCHAR(2))




 -- TABLO TÝPÝ DEGISKENLER
 DECLARE @OGRENCILER TABLE(
 OGR_NO VARCHAR(50),
 OGR_AD VARCHAR(50),
 OGR_SOYAD VARCHAR(50),
 OGR_KOL VARCHAR(50)
 )

 INSERT INTO @OGRENCILER VALUES(
 'A25','EMRE','ULUDAG','SAGLIK'
 )

 INSERT INTO @OGRENCILER VALUES(
 'B16', 'EREN', 'ULUDAG', 'CEVRE'
 )
 INSERT INTO @OGRENCILER VALUES(
 'A28', 'ARDA', 'ULUDAG', 'TRAFIK'
 )

 SELECT * FROM @OGRENCILER ORDER BY OGR_NO




 



 --OUTPUT ISLEMI

 DECLARE @YENI TABLE(
 RENK VARCHAR(10),
 BASKI TINYINT,
 DERECE VARCHAR(1)
 )
INSERT INTO KITAP3
OUTPUT inserted.KITAP_RENGI, inserted.KITAP_BASKI
INTO @YENI
VALUES('MAVI',21)
SELECT * FROM @YENI


-- ÝF ELSE
DECLARE @KITAPSAYI INT 
SELECT @KITAPSAYI =  COUNT(KITAP_ADI) FROM KITAP2
IF(@KITAPSAYI<=5)
BEGIN 
	PRINT 'YETERSIZ KITAP' + @KITAPSAYI
END
ELSE 
BEGIN 
	PRINT 'YETERLI KITAP: ' + CAST(@KITAPSAYI AS NVARCHAR(2))
END


DECLARE @SAYI INT
SELECT @SAYI = COUNT(KITAP_TUR) FROM KITAP2
WHERE KITAP_TUR = 'ROMAN'

IF (@SAYI<= 3)
BEGIN 
	PRINT 'YETERSIZ ROMAN: ' + CAST(@SAYI AS NVARCHAR(1))
END
ELSE IF(@SAYI > 3 AND @SAYI <= 6)
BEGIN
	PRINT 'ORTA SAYIDA KITAP: ' + CAST(@SAYI AS NVARCHAR(1))
END

ELSE 
BEGIN
	PRINT 'YETERLI KITAP MEVCUT: ' + CAST(@SAYI AS NVARCHAR(1)) 
END 


-- SWÝTCH CASE 
SELECT KITAP_RENGI, KITAP_DERECE, 'DURUM'=
CASE KITAP_DERECE
	WHEN 'A' THEN 'COK KALITELI'
	WHEN 'B' THEN 'KALITELI'
	WHEN 'C' THEN 'ORTA'
	ELSE 'BILINMEYEN DEGER'
END
FROM KITAP3


SELECT KITAP_RENGI, KITAP_BASKI, 'BASIM ORANI'=
CASE

	WHEN KITAP_BASKI <= 3 THEN 'AZ BASIM'
	WHEN KITAP_BASKI >3 AND KITAP_BASKI <=5 THEN 'ORTA BASIM'
	WHEN KITAP_BASKI >5 AND KITAP_BASKI <= 8 THEN 'ÝDEAL BASIM'
	WHEN KITAP_BASKI >8 AND KITAP_BASKI <= 10 THEN 'COK BASIM'

END
FROM KITAP3







--WHILE DONGUSU
DECLARE @SAYI_C INT 
SET  @SAYI_C = 1
WHILE(@SAYI_C <10)
BEGIN
	PRINT @SAYI_C
	SET @SAYI_C = @SAYI_C +1
END






--COUNTINUE AND GOTO
DECLARE @SAYI_D INT
SET @SAYI_D =1





--PROCEDURE 
CREATE PROCEDURE DENEME2
AS 
	SELECT * FROM KITAP WHERE KITAP_SAYFA > 150

EXEC DENEME2




ALTER PROCEDURE DENEME2
AS 
	SELECT * FROM KITAP WHERE KITAP_SAYFA > 300

EXEC DENEME2




CREATE PROCEDURE KITAPGETIR
AS
SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 INNER JOIN KITAP2 K2
ON 
K1.KITAP_AD= K2.KITAP_ADI

EXEC KITAPGETIR



SET NOCOUNT OFF 
SELECT * FROM KITAP



CREATE PROCEDURE TOPLAM(@SAYI_E INT, @SAYI_F INT, @SONUC INT OUTPUT)
AS 
SET @SONUC = @SAYI_E + @SAYI_F


DECLARE  @T INT
EXEC TOPLAM 4,6,@T OUTPUT
PRINT @T





CREATE PROCEDURE CARPIM 
(@S1 INT, @S2 INT, @S3 INT, @SONUC INT OUTPUT)
AS
	SET @SONUC= @S1*@S2*@S3
	PRINT 'SONUC: ' + CAST(@SONUC AS NVARCHAR(3))

DECLARE @A INT 
EXEC CARPIM 4,5,6,@A OUTPUT






CREATE PROCEDURE ORTALAMA
(@A INT,@B INT,@C INT, @S INT OUTPUT)
AS
SET @S = (@A+@B+@C)/3
PRINT 'ORTALAMA: ' + CAST(@S AS NVARCHAR(2))


DECLARE @ORT INT
EXEC ORTALAMA 8,10,20, @ORT 





ALTER PROCEDURE KITAPGETIR(@RENK VARCHAR(10))
AS
SELECT * FROM KITAP2 WHERE KITAP_RENK =@RENK

EXEC KITAPGETIR 'KIRMIZI'





--FONKSIYONLAR
CREATE FUNCTION BUYUKHARF(@GELENDEGER NVARCHAR(10))
RETURNS NVARCHAR(10)
AS
BEGIN
	RETURN UPPER(@GELENDEGER)
END


SELECT DBO.BUYUKHARF(KITAP_RENGI) AS 'BUYUK HARF' FROM KITAP3



CREATE FUNCTION KUCUKHARF(@GELEN NVARCHAR(10))
RETURNS NVARCHAR(10)
AS
BEGIN
	RETURN LOWER(@GELEN)
END

SELECT DBO.KUCUKHARF(KITAP_RENGI) AS 'KUCUK HARF' FROM KITAP3



CREATE FUNCTION KAYIT_SAYI(@GELENRENK NVARCHAR(10)) 
RETURNS INT
AS 
BEGIN
	DECLARE @SAYI_G INT
	SELECT @SAYI_G = COUNT(KITAP_RENGI) FROM KITAP3 
	WHERE KITAP_RENGI = @GELENRENK
	RETURN @SAYI_G
END

SELECT DBO.KAYIT_SAYI('MAVI')



SELECT * FROM KITAP2 WHERE KITAP_PUAN > 8

CREATE FUNCTION KITAP_PUAN(@GELENPUAN INT)
RETURNS TABLE
AS
RETURN(SELECT * FROM KITAP2 WHERE KITAP_PUAN>@GELENPUAN)

SELECT KITAP_ADI, KITAP_RENK FROM DBO.KITAP_PUAN(9)





--TRIGGER
CREATE TRIGGER DENEME ON KITAP2
AFTER INSERT
AS
BEGIN
	SELECT 'YENI BIR KITAP KAYDI YAPILDI'
END

INSERT INTO KITAP2 VALUES(
'INSAN NE ILE YASAR','HIKAYE','OOOOO','YESIL',8
)


CREATE TRIGGER DENEME2 ON KITAP2
AFTER INSERT
AS
BEGIN
	SELECT KITAP_ADI, KITAP_PUAN,KITAP_PUAN=KITAP_PUAN+8 
	FROM KITAP2 WHERE KITAP_PUAN=12
END


INSERT INTO KITAP2 VALUES('SEVGI NEREDEYSE TANRI ORADADIR','HÝKAYE','GGGG','SARI',4)


CREATE TABLE GUNCELLEME(
SAYAC INT
)

CREATE TRIGGER GUNCELLEKONTROL ON KITAP2
AFTER UPDATE --GUNCELLEME ISLEMI YAPILDIKTAN SONRA ANLAMINA GELÝR
AS
BEGIN
	SELECT 'GUNCELLEME ISLEMI GERCEKLESTI'
END

UPDATE KITAP2 SET KITAP_PUAN=10 WHERE KITAP_ADI='ANKA KUSU'

CREATE TRIGGER GUNCELLEKONTROL2 ON KITAP2
AFTER UPDATE
AS 
BEGIN 
	UPDATE GUNCELLEME SET SAYAC=SAYAC+1
END



UPDATE KITAP2 SET KITAP_PUAN=5 WHERE KITAP_ADI='INSAN NE ILE YASAR'

CREATE TRIGGER SILMEKONTROL ON KITAP2
AFTER DELETE --SILME ISLEMI GERCEKLESTIKTEN SONRA UYGULANIR
AS
BEGIN 
	SELECT 'TABLODAN SILINDI'
END


DELETE FROM KITAP2 WHERE KITAP_OZET='UUUU'


CREATE TRIGGER SILMEKONTROL2 ON KITAP2
AFTER DELETE
AS
BEGIN
	UPDATE GUNCELLEME SET SAYAC = SAYAC-1
END

DELETE FROM KITAP2 WHERE KITAP_PUAN= 4











--TRIGGER INSTEAD OF
CREATE TRIGGER INSDENEME ON KITAP2
INSTEAD OF INSERT --EKLEME ISLEMI YERINE BUNU YAPSIN ANLAMINA GELIR
AS 
BEGIN 
	SELECT 'EKLEME ISLEMINDE SORUN YOK'
END


INSERT INTO KITAP2 VALUES('PALTO','ROMAN','VVVVV','KIRMIZI',8)


CREATE TRIGGER INSDEME2 ON KITAP2
INSTEAD OF UPDATE --KAYIT GUNCELLEME YERINE GETIRILIR
AS
BEGIN
	SELECT 'KAYIT GUNCELLENEBILIR'
END

UPDATE KITAP2 SET KITAP_ADI='SAVAS VE BARIS' WHERE KITAP_ADI='PALTO'

CREATE TRIGGER INSDENEME3 ON KITAP2
INSTEAD OF DELETE --SÝLME YERÝNE KULLANILABILECEK OLANI GETIRIR
AS
BEGIN
	SELECT 'KAYIT SILINEBILIR'
END


DELETE FROM KITAP2 WHERE KITAP_ADI = 'SIYAH LALE'





--TAKRAR2
SELECT KITAP_AD, KITAP_RENK FROM KITAP K1 INNER JOIN KITAP2 K2
ON
K1.KITAP_AD = K2.KITAP_ADI

CREATE PROC TRANSFERDENEME
AS
BEGIN 
	SELECT KITAP_AD, KITAP_TUR FROM KITAP K1 INNER JOIN KITAP2 K2 
	ON K1.KITAP_AD = K2.KITAP_ADI
END


EXEC TRANSFERDENEME




--WHERE ÝLE BÝRLEÞTÝRME

SELECT KITAP_AD,KITAP_YAZAR, KITAP_TUR FROM KITAP K1, KITAP2 K2
WHERE K1.KITAP_AD = K2.KITAP_ADI 

SELECT KITAP_AD, KITAP_RENK FROM KITAP K1, KITAP2 K2
WHERE K1.KITAP_AD = K2.KITAP_ADI 